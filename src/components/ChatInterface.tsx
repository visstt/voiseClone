import { useState } from "react";
import "./ChatInterface.css";

interface ChatInterfaceProps {
  recordedAudio: Blob | null;
}

// eslint-disable-next-line @typescript-eslint/no-unused-vars
const ChatInterface: React.FC<ChatInterfaceProps> = ({ recordedAudio }) => {
  const [isPlaying, setIsPlaying] = useState(false);
  const [currentQuestion, setCurrentQuestion] = useState<string | null>(null);

  const questions = [
    {
      id: 1,
      text: "–ö–∞–∫ –¥–µ–ª–∞?",
      response: "–£ –º–µ–Ω—è –≤—Å—ë –æ—Ç–ª–∏—á–Ω–æ! –ê –∫–∞–∫ —É —Ç–µ–±—è –¥–µ–ª–∞?",
    },
    {
      id: 2,
      text: "–†–∞—Å—Å–∫–∞–∂–∏ –∏—Å—Ç–æ—Ä–∏—é",
      response:
        "–û–¥–Ω–∞–∂–¥—ã —è –≤—Å—Ç—Ä–µ—Ç–∏–ª —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—É—á–∏–ª –º–µ–Ω—è –ø–æ–Ω–∏–º–∞—Ç—å –∫—Ä–∞—Å–æ—Ç—É –≤ –ø—Ä–æ—Å—Ç—ã—Ö –≤–µ—â–∞—Ö...",
    },
    {
      id: 3,
      text: "–ö–∞–∫–∞—è —Å–µ–≥–æ–¥–Ω—è –ø–æ–≥–æ–¥–∞?",
      response:
        "–°–µ–≥–æ–¥–Ω—è –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –¥–µ–Ω—å! –°–æ–ª–Ω—Ü–µ —Å–≤–µ—Ç–∏—Ç —è—Ä–∫–æ, –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –æ—Ç–ª–∏—á–Ω–æ–µ.",
    },
    {
      id: 4,
      text: "–ß—Ç–æ —Ç—ã –¥—É–º–∞–µ—à—å –æ –±—É–¥—É—â–µ–º?",
      response:
        "–ë—É–¥—É—â–µ–µ –ø–æ–ª–Ω–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π! –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ —Ä–∞–∑–≤–∏–≤–∞—é—Ç—Å—è, –∏ –º–∏—Ä —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –≤—Å—ë –±–æ–ª–µ–µ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã–º.",
    },
    {
      id: 5,
      text: "–†–∞—Å—Å–∫–∞–∂–∏ –∞–Ω–µ–∫–¥–æ—Ç",
      response:
        "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç –¥–æ–º–æ–π, –∞ –∂–µ–Ω–∞ –≥–æ–≤–æ—Ä–∏—Ç: '–î–æ—Ä–æ–≥–æ–π, —Å—Ö–æ–¥–∏ –≤ –º–∞–≥–∞–∑–∏–Ω –∑–∞ —Ö–ª–µ–±–æ–º, –∞ –µ—Å–ª–∏ –±—É–¥—É—Ç —è–π—Ü–∞ - –∫—É–ø–∏ –¥–µ—Å—è—Ç–æ–∫'. –ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è —Å –¥–µ—Å—è—Ç—å—é –±—É—Ö–∞–Ω–∫–∞–º–∏ —Ö–ª–µ–±–∞. '–ó–∞—á–µ–º —Å—Ç–æ–ª—å–∫–æ?' - —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∂–µ–Ω–∞. '–ù—É, —è–π—Ü–∞ –∂–µ –±—ã–ª–∏!'",
    },
  ];

  const handleQuestionClick = async (question: (typeof questions)[0]) => {
    if (isPlaying) return;

    setCurrentQuestion(question.text);
    setIsPlaying(true);

    // –°–∏–º—É–ª—è—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –≥–æ–ª–æ—Å–æ–º
    await simulateVoiceResponse(question.response);

    setIsPlaying(false);
    setCurrentQuestion(null);
  };

  const simulateVoiceResponse = async (text: string): Promise<void> => {
    return new Promise((resolve) => {
      // –°–∏–º—É–ª—è—Ü–∏—è –≤—Ä–µ–º–µ–Ω–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –≥–æ–ª–æ—Å–∞
      const duration = Math.max(3000, text.length * 50); // –º–∏–Ω–∏–º—É–º 3 —Å–µ–∫—É–Ω–¥—ã
      setTimeout(resolve, duration);
    });
  };

  return (
    <div className="chat-interface">
      <div className="chat-header">
        <h2>üó£Ô∏è –ß–∞—Ç —Å –≤–∞—à–∏–º –≥–æ–ª–æ—Å–æ–≤—ã–º –¥–≤–æ–π–Ω–∏–∫–æ–º</h2>
        <p>–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–ø—Ä–æ—Å, –∏ –≤–∞—à —Ü–∏—Ñ—Ä–æ–≤–æ–π –¥–≤–æ–π–Ω–∏–∫ –æ—Ç–≤–µ—Ç–∏—Ç –≤–∞—à–∏–º –≥–æ–ª–æ—Å–æ–º</p>
      </div>

      <div className="questions-grid">
        {questions.map((question) => (
          <button
            key={question.id}
            className={`question-btn ${
              isPlaying && currentQuestion === question.text ? "playing" : ""
            }`}
            onClick={() => handleQuestionClick(question)}
            disabled={isPlaying}
          >
            {isPlaying && currentQuestion === question.text ? (
              <div className="playing-indicator">
                <div className="audio-waves">
                  <span></span>
                  <span></span>
                  <span></span>
                  <span></span>
                </div>
                <span>–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ...</span>
              </div>
            ) : (
              <>
                <span className="question-icon">üí¨</span>
                <span className="question-text">{question.text}</span>
              </>
            )}
          </button>
        ))}
      </div>

      {isPlaying && (
        <div className="status-message">
          <div className="status-content">
            <div className="loading-spinner"></div>
            <span>–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –æ—Ç–≤–µ—Ç –≤–∞—à–∏–º –≥–æ–ª–æ—Å–æ–º...</span>
          </div>
        </div>
      )}

      <div className="info-box">
        <h3>‚ÑπÔ∏è –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç</h3>
        <ul>
          <li>–í–∞—à –≥–æ–ª–æ—Å –±—ã–ª –∑–∞–ø–∏—Å–∞–Ω –∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω</li>
          <li>–ò–ò —Å–æ–∑–¥–∞–ª –º–æ–¥–µ–ª—å –≤–∞—à–µ–≥–æ –≥–æ–ª–æ—Å–∞</li>
          <li>–¢–µ–ø–µ—Ä—å —Å–∏—Å—Ç–µ–º–∞ –º–æ–∂–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –≤–∞—à–∏–º –≥–æ–ª–æ—Å–æ–º –Ω–∞ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã</li>
          <li>–í—ã–±–µ—Ä–∏—Ç–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –≤—ã—à–µ, —á—Ç–æ–±—ã —É—Å–ª—ã—à–∞—Ç—å –æ—Ç–≤–µ—Ç</li>
        </ul>
      </div>
    </div>
  );
};

export default ChatInterface;
